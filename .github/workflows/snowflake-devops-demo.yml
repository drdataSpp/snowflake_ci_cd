name: Deploy Snowflake SQL Objects

on:
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - master

jobs:
  deploy-to-snowflake:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install schemachange
      run: pip install schemachange

    - name: Replace ENV in SQL files for Test
      if: github.event_name == 'pull_request'
      run: |
        find . -type f -name '*.sql' -exec sed -i 's/{{[Ee][Nn][Vv]}}/TEST/g' {} +

    - name: Deploy Database Changes
      if: github.event_name == 'pull_request'
      run: |
        schemachange -f $GITHUB_WORKSPACE/database -a ${{ secrets.SF_TEST_ACCOUNT }} -u ${{ secrets.SF_TEST_USERNAME }} -r ${{ secrets.SF_TEST_ROLE }} -w ${{ secrets.SF_TEST_WAREHOUSE }} -d ${{ secrets.SF_TEST_DATABASE }} -c ${{ secrets.SF_TEST_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
        
    - name: Deploy Schema Changes
      if: github.event_name == 'pull_request'
      run: |
        schemachange -f $GITHUB_WORKSPACE/schema -a ${{ secrets.SF_TEST_ACCOUNT }} -u ${{ secrets.SF_TEST_USERNAME }} -r ${{ secrets.SF_TEST_ROLE }} -w ${{ secrets.SF_TEST_WAREHOUSE }} -d ${{ secrets.SF_TEST_DATABASE }} -c ${{ secrets.SF_TEST_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    - name: Deploy Table Changes
      if: github.event_name == 'pull_request'
      run: |
        schemachange -f $GITHUB_WORKSPACE/table -a ${{ secrets.SF_TEST_ACCOUNT }} -u ${{ secrets.SF_TEST_USERNAME }} -r ${{ secrets.SF_TEST_ROLE }} -w ${{ secrets.SF_TEST_WAREHOUSE }} -d ${{ secrets.SF_TEST_DATABASE }} -c ${{ secrets.SF_TEST_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    - name: Deploy View Changes
      if: github.event_name == 'pull_request'
      run: |
        schemachange -f $GITHUB_WORKSPACE/view -a ${{ secrets.SF_TEST_ACCOUNT }} -u ${{ secrets.SF_TEST_USERNAME }} -r ${{ secrets.SF_TEST_ROLE }} -w ${{ secrets.SF_TEST_WAREHOUSE }} -d ${{ secrets.SF_TEST_DATABASE }} -c ${{ secrets.SF_TEST_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    # Add similar steps for other folders like sequences, stages, etc.

    - name: Replace ENV in SQL files for Prod
      if: github.ref == 'refs/heads/master'
      run: |
        find . -type f -name '*.sql' -exec sed -i 's/{{[Ee][Nn][Vv]}}/PROD/g' {} +

    - name: Deploy Database Changes to Prod
      if: github.ref == 'refs/heads/master'
      run: |
        schemachange -f $GITHUB_WORKSPACE/database -a ${{ secrets.SF_ACCOUNT }} -u ${{ secrets.SF_USERNAME }} -r ${{ secrets.SF_ROLE }} -w ${{ secrets.SF_WAREHOUSE }} -d ${{ secrets.SF_DATABASE }} -c ${{ secrets.SF_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
        
    
    - name: Deploy Schema Changes to Prod
      if: github.ref == 'refs/heads/master'
      run: |
        schemachange -f $GITHUB_WORKSPACE/schema -a ${{ secrets.SF_ACCOUNT }} -u ${{ secrets.SF_USERNAME }} -r ${{ secrets.SF_ROLE }} -w ${{ secrets.SF_WAREHOUSE }} -d ${{ secrets.SF_DATABASE }} -c ${{ secrets.SF_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    - name: Deploy Table Changes to Prod
      if: github.ref == 'refs/heads/master'
      run: |
        schemachange -f $GITHUB_WORKSPACE/table -a ${{ secrets.SF_ACCOUNT }} -u ${{ secrets.SF_USERNAME }} -r ${{ secrets.SF_ROLE }} -w ${{ secrets.SF_WAREHOUSE }} -d ${{ secrets.SF_DATABASE }} -c ${{ secrets.SF_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    - name: Deploy View Changes to Prod
      if: github.ref == 'refs/heads/master'
      run: |
        schemachange -f $GITHUB_WORKSPACE/view -a ${{ secrets.SF_ACCOUNT }} -u ${{ secrets.SF_USERNAME }} -r ${{ secrets.SF_ROLE }} -w ${{ secrets.SF_WAREHOUSE }} -d ${{ secrets.SF_DATABASE }} -c ${{ secrets.SF_DATABASE }}.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

    # Add similar steps for other folders like sequences, stages, etc.
