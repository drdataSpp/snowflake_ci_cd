name: snowflake-devops-demo

# Controls when the action will run.
on:
  pull_request:
    types: [opened, reopened]
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_TEST_ACCOUNT: ${{ secrets.SF_TEST_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_TEST_USERNAME: ${{ secrets.SF_TEST_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_TEST_ROLE: ${{ secrets.SF_TEST_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_TEST_WAREHOUSE: ${{ secrets.SF_TEST_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_TEST_DATABASE: ${{ secrets.SF_TEST_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SNOWFLAKE_TEST_PASSWORD: ${{ secrets.SF_TEST_PASSWORD }}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange

          echo "Determining environment and credentials"
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENVIRONMENT="PROD"
            ACCOUNT=$SF_ACCOUNT
            USERNAME=$SF_USERNAME
            ROLE=$SF_ROLE
            WAREHOUSE=$SF_WAREHOUSE
            DATABASE=$SF_DATABASE
            PASSWORD=$SNOWFLAKE_PASSWORD
          else
            ENVIRONMENT="TEST"
            ACCOUNT=$SF_TEST_ACCOUNT
            USERNAME=$SF_TEST_USERNAME
            ROLE=$SF_TEST_ROLE
            WAREHOUSE=$SF_TEST_WAREHOUSE
            DATABASE=$SF_TEST_DATABASE
            PASSWORD=$SNOWFLAKE_TEST_PASSWORD
          fi

          echo "Replacing {{ENV}} or {{env}} with $ENVIRONMENT"
          find $GITHUB_WORKSPACE -type f -name '*.sql' -exec sed -i "s/{{[Ee][Nn][Vv]}}/$ENVIRONMENT/g" {} +

          echo "Step 2: Running schemachange for Database Changes"
          schemachange -f $GITHUB_WORKSPACE/database -a $ACCOUNT -u $USERNAME -r $ROLE -w $WAREHOUSE -d $DATABASE -c $DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

          echo "Step 3: Running schemachange for Schema Changes"
          schemachange -f $GITHUB_WORKSPACE/schema -a $ACCOUNT -u $USERNAME -r $ROLE -w $WAREHOUSE -d $DATABASE -c $DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

          echo "Step 4: Running schemachange for Table Changes"
          schemachange -f $GITHUB_WORKSPACE/table -a $ACCOUNT -u $USERNAME -r $ROLE -w $WAREHOUSE -d $DATABASE -c $DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

          echo "Step 5: Running schemachange for View Changes"
          schemachange -f $GITHUB_WORKSPACE/view -a $ACCOUNT -u $USERNAME -r $ROLE -w $WAREHOUSE -d $DATABASE -c $DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table

          # Add similar steps for other folders like sequences, stages, etc.
